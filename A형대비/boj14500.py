tetro = [[[0,0],[0,1],[0,2],[0,3]],[[0,0],[1,0],[2,0],[3,0]],
         [[0,0],[1,0],[2,0],[2,1]],[[0,0],[0,1],[0,2],[1,0]],
         [[0,0],[0,1],[1,1],[2,1]],[[0,2],[1,0],[1,1],[1,2]],
         [[0,0],[1,0],[2,0],[0,1]],[[0,0],[0,1],[0,2],[1,2]],
         [[2,0],[0,1],[1,1],[2,1]],[[0,0],[1,0],[1,1],[1,2]],
         [[0,0],[1,0],[1,1],[2,1]],[[1,0],[1,1],[0,1],[0,2]],
         [[0,0],[0,1],[1,1],[1,2]],[[0,1],[1,0],[1,1],[2,0]],
         [[0,0],[0,1],[0,2],[1,1]],[[1,0],[1,1],[1,2],[0,1]],
         [[0,0],[1,0],[2,0],[1,1]],[[1,0],[0,1],[1,1],[2,1]],
         [[0,0],[0,1],[1,0],[1,1]]]
## dfs 집어넣어서 가지치기 4개까지 하는 방법 도전해야할듯

def count(y, x) :
    global Max  
    for t in tetro :
        flag = 1
        cnt = 0
        for i in range(4) :
            dy = t[i][0] + y
            dx = t[i][1] + x
            if dy < 0 or dy >= N or dx < 0 or dx >= M :
                flag = 0
                break
            cnt += arr[dy][dx]
        if flag == 0 :
            continue
        else :
            if cnt > Max :
                Max = cnt
Max = -21e8
N, M = map(int, input().split())
arr = [list(map(int, input().split())) for _ in range(N)]
for i in range(N) :
    for j in range(M) :
        count(i, j)
print(Max)